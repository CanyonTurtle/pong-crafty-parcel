{"dependencies":[{"name":"../core/core.js","loc":{"line":1,"column":21}}],"generated":{"js":"function t(t,e){this.gl=t,this.webgl=e,this.max_units=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.bound_textures=[],this.registered_textures={},this.active=null}function e(t,e){this.manager=t,this.gl=t.gl,this.glTexture=this.gl.createTexture(),this.id=e,this.active=!1,this.unit=null,this.powerOfTwo=!1}var i=require(\"../core/core.js\");i.TextureManager=t,t.prototype={reset:function(){for(var t=0;t<this.bound_textures.length;t++)this.bound_textures[t].unbind();this.bound_textures=[],this.active=null},makeTexture:function(t,i,r){var s=this.webgl,n=\"texture-(r:\"+r+\")-\"+t;if(void 0!==this.registered_textures[n])return this.registered_textures[n];var h=new e(this,n);return this.registered_textures[n]=h,this.bindTexture(h),h.setImage(i),h.setFilter(s.texture_filter),h.setRepeat(r),h},smallest:function(){for(var t=1/0,e=null,i=0;i<this.bound_textures.length;i++){var r=this.bound_textures[i];r.size<t&&(t=r.size,e=i)}return e},getAvailableUnit:function(){return this.bound_textures.length<this.max_units?this.bound_textures.length:this.smallest()},bindTexture:function(t){if(null===t.unit){var e=this.getAvailableUnit();this.bound_textures[e]&&this.unbindTexture(this.bound_textures[e]),this.bound_textures[e]=t,t.bind(e)}},unbindTexture:function(t){t.unbind()},setActiveTexture:function(t){this.active!==t.id&&(this.gl.activeTexture(this.gl[t.name]),this.active=t.unit)}},i.TextureWrapper=e,e.prototype={bind:function(t){var e=this.gl;this.unit=t,this.name=\"TEXTURE\"+t,this.manager.setActiveTexture(this),e.bindTexture(e.TEXTURE_2D,this.glTexture)},isActive:function(){return this.manager.active===this.unit},unbind:function(){this.unit=null,this.name=null,this.isActive()&&(this.manager.active=null)},setImage:function(t){if(!this.isActive())throw\"Trying to set image of texture that isn't active\";this.width=t.width,this.height=t.height,this.size=t.width*t.height,this.powerOfTwo=!(Math.log(t.width)/Math.LN2!==Math.floor(Math.log(t.width)/Math.LN2)||Math.log(t.height)/Math.LN2!==Math.floor(Math.log(t.height)/Math.LN2));var e=this.gl;e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t)},setFilter:function(t){if(!this.isActive())throw\"Trying to set filter of texture that isn't active\";var e=this.gl;e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,t)},setRepeat:function(t){if(!this.isActive())throw\"Trying to set repeat property of texture that isn't active\";if(t&&!this.powerOfTwo)throw\"Can't create a repeating image whose dimensions aren't a power of 2 in WebGL contexts\";var e=this.gl;this.repeatMode=t?e.REPEAT:e.CLAMP_TO_EDGE,e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,this.repeatMode),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,this.repeatMode)},setToProgram:function(t,e,i){if(null===this.unit)throw\"Trying to use texture not set to a texture unit.\";var r=this.gl;r.useProgram(t),r.uniform1i(r.getUniformLocation(t,e),this.unit),r.uniform2f(r.getUniformLocation(t,i),this.width,this.height)}};"},"hash":"75370a2267f1758b4681b2a41382ed8f"}