{"dependencies":[{"name":"./setup","loc":{"line":1,"column":23}}],"generated":{"js":"\"use strict\";\n\nvar _setup = require(\"./setup\");\n\nvar Setup = _interopRequireWildcard(_setup);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// Define the behavor of objects that will be limited by the boundaries of the game.\nCrafty.c('Bounded', {\n\n  // simply limit the x and y properties of an object / entity to within the game.\n  restrict() {\n    let width = this.w || 10;\n    let height = this.h || 10;\n    if (this.x >= Setup.bounds.right - width) {\n      this.x = Setup.bounds.right - width;\n    }\n    if (this.x <= Setup.bounds.left) {\n      this.x = Setup.bounds.left;\n    }\n    if (this.y >= Setup.bounds.bottom - height) {\n      this.y = Setup.bounds.bottom - height;\n    }\n    if (this.y <= Setup.bounds.top) {\n      this.y = Setup.bounds.top;\n    }\n  },\n\n  // bounce the object using it's vx and vy.\n  bounceOffWalls() {\n    let width = this.w || 10;\n    let height = this.h || 10;\n    this.restrict.call(this);\n    if (this.x === Setup.bounds.left || this.x === Setup.bounds.right - width) {\n      if (this.vx) {\n        this.vx *= -1;\n      }\n    }\n    if (this.y === Setup.bounds.bottom - height || this.y === Setup.bounds.top) {\n      if (this.vy) {\n        this.vy *= -1;\n      }\n    }\n  }\n});"},"hash":"478dcdab763afd51cbff9cedd1c7ce45"}